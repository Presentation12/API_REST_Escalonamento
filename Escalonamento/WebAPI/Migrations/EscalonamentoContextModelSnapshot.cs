// <auto-generated />
using System;
using Escalonamento.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Escalonamento.Migrations
{
    [DbContext(typeof(EscalonamentoContext))]
    partial class EscalonamentoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Escalonamento.Models.Conexao", b =>
                {
                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<int>("IdSim")
                        .HasColumnType("int");

                    b.Property<int>("IdJob")
                        .HasColumnType("int");

                    b.Property<int>("IdOp")
                        .HasColumnType("int");

                    b.Property<int?>("Duracao")
                        .HasColumnType("int");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("estado");

                    b.Property<int?>("IdMaq")
                        .HasColumnType("int");

                    b.Property<int?>("Tempo_Inicial")
                        .HasColumnType("int");

                    b.HasKey("IdUser", "IdSim", "IdJob", "IdOp")
                        .HasName("pk_conexao");

                    b.ToTable("conexao");
                });

            modelBuilder.Entity("Escalonamento.Models.Maquina", b =>
                {
                    b.Property<int>("IdMaq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_maq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("estado");

                    b.HasKey("IdMaq")
                        .HasName("pk_id_maq");

                    b.ToTable("maquina");
                });

            modelBuilder.Entity("Escalonamento.Models.Utilizador", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_user")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Aut")
                        .HasColumnType("bit")
                        .HasColumnName("aut");

                    b.Property<string>("Estado")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("estado");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("mail");

                    b.Property<string>("PassHash")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("pass_hash");

                    b.Property<string>("PassSalt")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("pass_salt");

                    b.HasKey("IdUser")
                        .HasName("pk_id_user");

                    b.HasIndex(new[] { "Mail" }, "uk_mail")
                        .IsUnique();

                    b.ToTable("utilizador");
                });
#pragma warning restore 612, 618
        }
    }
}
